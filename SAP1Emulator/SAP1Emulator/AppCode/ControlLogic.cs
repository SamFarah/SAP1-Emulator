using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
class ControlLogic
{

    public ControlLogic(Register instructionRegister)
    {
        MicroCounter = new Counter(0x05);
        MicroCounter.Count = true;
        InstructionRegister = instructionRegister;
    }

    private Register InstructionRegister;

    public UInt16 GetControlWord(bool Init=false)
    {
        if (!Init)MicroCounter.Inc();        
        return MicroInstructionSet[((InstructionRegister.Data & 0xF0) >> 1) | (MicroCounter.Data & 0x07)];                
    }

    public Counter MicroCounter { get; set; }
    public byte Decoder
    {
        get
        {
            byte Decoded = (byte)~(byte)Math.Pow(2, (MicroCounter.Data & 0x07));
            if ((Decoded & 0x20) == 0) MicroCounter.Reset();
            return Decoded;
        }
    }


    //Simulate an EEPROM 
    private static readonly UInt16[] MicroInstructionSet =
        {
/*  INST   STP */
/* 0b00000 000 */	0x4004,
/* 0b00000 001 */	0x1408,

/* 0b00000 010 */	0x0000,
/* 0b00000 011 */	0x0000,
/* 0b00000 100 */	0x0000,

/* 0b00000 101 */	0x0000,
/* 0b00000 110 */	0x0000,
/* 0b00000 111 */	0x0000,

/*-----------------------*/

/*         LDA          */

/* 0b00001 000 */	0x4004,
/* 0b00001 001 */	0x1408,

/* 0b00001 010 */	0x4800,
/* 0b00001 011 */	0x1200,
/* 0b00001 100 */	0x0000,

/* 0b00001 101 */	0x0000,
/* 0b00001 110 */	0x0000,
/* 0b00001 111 */	0x0000,

/*-----------------------*/

/*         ADD          */

/* 0b00010 000 */	0x4004,
/* 0b00010 001 */	0x1408,

/* 0b00010 010 */	0x4800,
/* 0b00010 011 */	0x1020,
/* 0b00010 100 */	0x0280,

/* 0b00010 101 */	0x0000,
/* 0b00010 110 */	0x0000,
/* 0b00010 111 */	0x0000,

/*-----------------------*/

/* 0b00011 000 */	0x4004,
/* 0b00011 001 */	0x1408,

/* 0b00011 010 */	0x0000,
/* 0b00011 011 */	0x0000,
/* 0b00011 100 */	0x0000,

/* 0b00011 101 */	0x0000,
/* 0b00011 110 */	0x0000,
/* 0b00011 111 */	0x0000,

/*-----------------------*/

/* 0b00100 000 */	0x4004,
/* 0b00100 001 */	0x1408,

/* 0b00100 010 */	0x0000,
/* 0b00100 011 */	0x0000,
/* 0b00100 100 */	0x0000,

/* 0b00100 101 */	0x0000,
/* 0b00100 110 */	0x0000,
/* 0b00100 111 */	0x0000,

/*-----------------------*/

/* 0b00101 000 */	0x4004,
/* 0b00101 001 */	0x1408,

/* 0b00101 010 */	0x0000,
/* 0b00101 011 */	0x0000,
/* 0b00101 100 */	0x0000,

/* 0b00101 101 */	0x0000,
/* 0b00101 110 */	0x0000,
/* 0b00101 111 */	0x0000,

/*-----------------------*/

/* 0b00110 000 */	0x4004,
/* 0b00110 001 */	0x1408,

/* 0b00110 010 */	0x0000,
/* 0b00110 011 */	0x0000,
/* 0b00110 100 */	0x0000,

/* 0b00110 101 */	0x0000,
/* 0b00110 110 */	0x0000,
/* 0b00110 111 */	0x0000,

/*-----------------------*/

/* 0b00111 000 */	0x4004,
/* 0b00111 001 */	0x1408,

/* 0b00111 010 */	0x0000,
/* 0b00111 011 */	0x0000,
/* 0b00111 100 */	0x0000,

/* 0b00111 101 */	0x0000,
/* 0b00111 110 */	0x0000,
/* 0b00111 111 */	0x0000,

/*-----------------------*/

/* 0b01000 000 */	0x4004,
/* 0b01000 001 */	0x1408,

/* 0b01000 010 */	0x0000,
/* 0b01000 011 */	0x0000,
/* 0b01000 100 */	0x0000,

/* 0b01000 101 */	0x0000,
/* 0b01000 110 */	0x0000,
/* 0b01000 111 */	0x0000,

/*-----------------------*/

/* 0b01001 000 */	0x4004,
/* 0b01001 001 */	0x1408,

/* 0b01001 010 */	0x0000,
/* 0b01001 011 */	0x0000,
/* 0b01001 100 */	0x0000,

/* 0b01001 101 */	0x0000,
/* 0b01001 110 */	0x0000,
/* 0b01001 111 */	0x0000,

/*-----------------------*/

/* 0b01010 000 */	0x4004,
/* 0b01010 001 */	0x1408,

/* 0b01010 010 */	0x0000,
/* 0b01010 011 */	0x0000,
/* 0b01010 100 */	0x0000,

/* 0b01010 101 */	0x0000,
/* 0b01010 110 */	0x0000,
/* 0b01010 111 */	0x0000,

/*-----------------------*/

/* 0b01011 000 */	0x4004,
/* 0b01011 001 */	0x1408,

/* 0b01011 010 */	0x0000,
/* 0b01011 011 */	0x0000,
/* 0b01011 100 */	0x0000,

/* 0b01011 101 */	0x0000,
/* 0b01011 110 */	0x0000,
/* 0b01011 111 */	0x0000,

/*-----------------------*/

/* 0b01100 000 */	0x4004,
/* 0b01100 001 */	0x1408,

/* 0b01100 010 */	0x0000,
/* 0b01100 011 */	0x0000,
/* 0b01100 100 */	0x0000,

/* 0b01100 101 */	0x0000,
/* 0b01100 110 */	0x0000,
/* 0b01100 111 */	0x0000,

/*-----------------------*/

/* 0b01101 000 */	0x4004,
/* 0b01101 001 */	0x1408,

/* 0b01101 010 */	0x0000,
/* 0b01101 011 */	0x0000,
/* 0b01101 100 */	0x0000,

/* 0b01101 101 */	0x0000,
/* 0b01101 110 */	0x0000,
/* 0b01101 111 */	0x0000,

/*-----------------------*/

/*         OUT          */

/* 0b01110 000 */	0x4004,
/* 0b01110 001 */	0x1408,

/* 0b01110 010 */	0x0110,
/* 0b01110 011 */	0x0000,
/* 0b01110 100 */	0x0000,

/* 0b01110 101 */	0x0000,
/* 0b01110 110 */	0x0000,
/* 0b01110 111 */	0x0000,

/*-----------------------*/

/* 0b01111 000 */	0x4004,
/* 0b01111 001 */	0x1408,

/* 0b01111 010 */	0x8000,
/* 0b01111 011 */	0x0000,
/* 0b01111 100 */	0x0000,

/* 0b01111 101 */	0x0000,
/* 0b01111 110 */	0x0000,
/* 0b01111 111 */	0x0000,


        };

    public void Reset()
    {
        MicroCounter.Reset();
    }
}

